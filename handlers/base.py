# handlers/base.py
from aiogram import Router, F
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton

router = Router()

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
main_kb = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üì® –ü–æ–ª—É—á–∏—Ç—å –±—Ä–∏—Ñ–∏–Ω–≥ —Å–µ–π—á–∞—Å"),
         KeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")],
    ],
    resize_keyboard=True
)

@router.message(F.text == "/start")
async def cmd_start(message: Message):
    """
    –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.
    """
    db = message.bot.db
    await db.execute(
        """
        INSERT INTO users(chat_id, notify_time, modules)
        VALUES($1, '09:00', '[]')
        ON CONFLICT DO NOTHING
        """,
        message.chat.id
    )
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî –±–æ—Ç ¬´–£—Ç—Ä–µ–Ω–Ω–∏–π –±—Ä–∏—Ñ–∏–Ω–≥¬ª. –° –ø–æ–º–æ—â—å—é –º–µ–Ω—é —Ç—ã —Å–º–æ–∂–µ—à—å –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –ø–æ–ª—É—á–µ–Ω–∏–µ –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç –∏ –Ω–æ–≤–æ—Å—Ç–µ–π –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.",
        reply_markup=main_kb
    )

@router.message(F.text == "üì® –ü–æ–ª—É—á–∏—Ç—å –±—Ä–∏—Ñ–∏–Ω–≥ —Å–µ–π—á–∞—Å")
async def cmd_send_now(message: Message):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –±—Ä–∏—Ñ–∏–Ω–≥ —Å—Ä–∞–∑—É.
    """
    db = message.bot.db
    row = await db.fetchrow(
        "SELECT modules FROM users WHERE chat_id = $1",
        message.chat.id
    )
    modules = row["modules"] or []
    texts = []
    # –ö—É—Ä—Å –≤–∞–ª—é—Ç
    if "currency" in modules:
        from services.currency import get_usd_change
        texts.append(await get_usd_change())
    # –ù–æ–≤–æ—Å—Ç–∏ (—Ç–µ–ø–µ—Ä—å –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ)
    if "news" in modules:
        from services.news import get_top_news
        texts.append(await get_top_news())

    if not texts:
        await message.answer("–£ –≤–∞—Å –Ω–µ –≤–∫–ª—é—á–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ –º–æ–¥—É–ª—è: –∑–∞–π–¥–∏—Ç–µ –≤ ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏.")
    else:
        await message.answer("\n\n".join(texts))